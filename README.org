This document describe the procedure to install a self hosted cloud.

In a mess :D

* Cloud Server Installation
:LOGBOOK:
- Note taken on [2018-05-06 dim. 15:31] \\
  Look at that: https://github.com/sovereign/sovereign/tree/master
:END:
** CANCELLED Manual install 
CLOSED: [2018-05-17 jeu. 09:09]
I install ubuntu 16.04.
*** First connection
- create user
#+BEGIN_SRC shell
adduser cayek
adduser deploy
usermod -aG sudo deploy
#+END_SRC
*** Install ufw
:LOGBOOK:
- Note taken on [2018-05-14 lun. 16:23] \\
  - [[https://www.digitalocean.com/community/tutorials/how-to-set-up-a-firewall-with-ufw-on-ubuntu-16-04][How To Set Up a Firewall with UFW on Ubuntu 16.04]]
:END:
- install ufw
#+BEGIN_SRC shell
sudo apt-get install ufw
#+END_SRC
- deny every things
#+BEGIN_SRC shell
sudo ufw default deny incoming
sudo ufw default allow outgoing
#+END_SRC
- allow ssh
#+BEGIN_SRC shell
sudo ufw allow ssh
#+END_SRC
- enable ufw
#+BEGIN_SRC shell
sudo ufw enable
#+END_SRC
*** Install NGinx
:LOGBOOK:
- Note taken on [2018-05-14 lun. 16:31] \\
  [[https://www.digitalocean.com/community/tutorials/how-to-install-nginx-on-ubuntu-16-04][How To Install Nginx on Ubuntu 16.04]]
:END:
- install Nginx
#+BEGIN_SRC shell
sudo apt-get install nginx
#+END_SRC
- configuration /etc/nginx/nginx.conf
#+BEGIN_EXAMPLE
worker_processes 4;
#+END_EXAMPLE
max number of core
- setup ufw
#+BEGIN_SRC shell

#+END_SRC
*** Install of MariaDB (mysql)
- install 
#+BEGIN_SRC shell
sudo apt-get install mariadb-server mariadb-client
#+END_SRC
- secure mariadb server
#+BEGIN_SRC shell
sudo mysql_secure_installation
#+END_SRC
*** Install of Nextcloud
:LOGBOOK:
- Note taken on [2018-05-14 lun. 16:56] \\
  - [[https://websiteforstudents.com/install-nextcloud-on-ubuntu-16-04-lts-with-nginx-mariadb-php-7-1-and-lets-encrypt-ssl-tls/][Install NextCloud on Ubuntu 16.04 LTS with Nginx, MariaDB, PHP 7.1 and Let’s Encrypt SSL/TLS]]
  - [[https://howto.wared.fr/ubuntu-installation-nextcloud-nginx/][Ubuntu 18.04 LTS – Installation de Nextcloud 13 avec Nginx, PHP7-FPM, MariaDB et SSL/TLS]]
:END:
-  Install PHP 7.1-FPM and Related Modules
#+BEGIN_SRC shell
sudo apt-get install software-properties-common
sudo add-apt-repository ppa:ondrej/php
sudo apt update
sudo apt install php7.1-fpm php7.1-common php7.1-mbstring php7.1-xmlrpc php7.1-soap php7.1-apcu php7.1-smbclient php7.1-ldap php7.1-redis php7.1-gd php7.1-xml php7.1-intl php7.1-json php7.1-imagick php7.1-mysql php7.1-cli php7.1-mcrypt php7.1-ldap php7.1-zip php7.1-curl
#+END_SRC
- config /etc/php/7.1/fpm/php.ini
#+BEGIN_EXAMPLE
file_uploads = On
allow_url_fopen = On
memory_limit = 256M
upload_max_file_size = 64M
max_execution_time = 360
cgi.fix_pathinfo = 0
date.timezone = Europe/Paris
#+END_EXAMPLE
- Create NextCloud Database
#+BEGIN_SRC shell
sudo mysql -u root -p
#+END_SRC
then create the database
#+BEGIN_SRC sql
CREATE DATABASE nextcloud;
CREATE USER 'nextclouduser'@'localhost' IDENTIFIED BY 'new_password_here';
GRANT ALL ON nextcloud.* TO 'nextclouduser'@'localhost' IDENTIFIED BY 'user_password_here' WITH GRANT OPTION;
FLUSH PRIVILEGES;
EXIT;
#+END_SRC
- download nextcloud (go see last version)
#+BEGIN_SRC shell
cd /tmp && wget https://download.nextcloud.com/server/releases/nextcloud-11.0.1.zip
unzip nextcloud-11.0.1.zip
sudo mv nextcloud /var/www/html/nextcloud/
#+END_SRC
then put rights 
#+BEGIN_SRC shell
sudo chown -R www-data:www-data /var/www/html/nextcloud/
sudo chmod -R 755 /var/www/html/nextcloud/
#+END_SRC
** Sovereign
:LOGBOOK:
- Note taken on [2018-05-19 sam. 13:00] \\
  - letsencrypt limit certificate :D https://letsencrypt.org/docs/rate-limits/
:END:
*** Install
*On the server*
- Install Debian 8
- first connection
#+BEGIN_SRC shell
apt-get update
apt install sudo aptitude
passwd
useradd deploy
passwd deploy
mkdir /home/deploy
#+END_SRC
then copy your ssh public key
#+BEGIN_SRC shell
mkdir /home/deploy/.ssh
chmod 700 /home/deploy/.ssh
vim /home/deploy/.ssh/authorized_keys
chmod 400 /home/deploy/.ssh/authorized_keys
chown deploy:deploy /home/deploy -R
echo 'deploy ALL=(ALL) NOPASSWD: ALL' > /etc/sudoers.d/deploy
#+END_SRC
*On the local machine*
#+BEGIN_SRC shell
mkvirtualenv sovereign
cd ~/src/sovereign/
pip install -r requirments
#+END_SRC
An run ansible
#+BEGIN_SRC shell
ansible-playbook -i ./hosts --ask-sudo-pass site.yml
#+END_SRC

*DNS*
- [X] create A entry with domain name for
  #+BEGIN_EXAMPLE
  
  #+END_EXAMPLE
- [X] set up reverse DNS (on your server provider)
- [X] create MX entry that assign mail. as the domain mail server
- [X] DKIM
- [X] DMARC
- [X] SPF (I use automatic entry generated by my provider..)

*Owncloud*
- set the database (basename: owncloud)

*selfoss*

*git*

*walabag*

*test the mail*
- send a mail to check-auth@verifier.port25.com
*** Install nextcloud in place of owncloud
- bk owncloud
#+BEGIN_SRC shell
cd /var/www/
mv owncloud owncloud_bk
#+END_SRC
- ddl nextcloud
#+BEGIN_SRC shell
cd /tmp && wget https://download.nextcloud.com/server/releases/nextcloud-13.0.2.zip
unzip nextcloud-13.0.2.zip
sudo mv nextcloud /var/www/owncloud/
#+END_SRC
- set ownership
#+BEGIN_SRC shell
sudo chown -R www-data:www-data /var/www/owncloud/
sudo chmod -R 755 /var/www/owncloud/
#+END_SRC
- link data dir
#+BEGIN_SRC shell
cd /var/www/owncloud/
ln -s  /decrypted/owncloud-data data
mkdir /decrypted/owncloud-data
sudo chown -R www-data:www-data /decrypted/owncloud-data
#+END_SRC
- then go to cloud.exemple.com and finish setup
*** backup
*** Restart the server
After restart encrypted file are not mounted. To mount it I run the ansible
playbook with webapp commented is site.yml !!
** CANCELLED nodiscc/srv01
CLOSED: [2018-05-25 ven. 17:05]
Let's try that :D
*** Server Install
- Install Debian 9
- Then 
#+BEGIN_SRC shell
passwd
sudo apt update
sudo apt install sudo ansible git aptitude
#+END_SRC
- clone nodiscc/srv01 on the remote server
#+BEGIN_SRC shell
git clone https://github.com/nodiscc/srv01
cd srv01
./srv01 initserver
#+END_SRC
*** On the local machine
- install dependencies
#+BEGIN_SRC shell
sudo apt install git ansible sshpass openssh-client pwgen aptitude
#+END_SRC
- 
** TODO Mailpile
** INPROGRESS Other webapp
*** shaarli
:LOGBOOK:
- Note taken on [2018-05-20 dim. 21:36] \\
  inspiration from [[file:~/src/srv01/roles/webapp-shaarli/tasks/shaarli.yml::#####%20CHECK%20REQUIREMENTS%20#####][srv01]]
:END:
- download
#+BEGIN_SRC shell
wget https://github.com/shaarli/Shaarli/releases/download/v0.9.6/shaarli-v0.9.6-full.zip
#+END_SRC
- install dependencies
#+BEGIN_SRC shell
sudo apt install php7.0-gd php7.0-curl
#+END_SRC
- 
